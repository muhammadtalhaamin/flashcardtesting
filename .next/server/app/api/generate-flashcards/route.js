"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-flashcards/route";
exports.ids = ["app/api/generate-flashcards/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-flashcards%2Froute&page=%2Fapi%2Fgenerate-flashcards%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-flashcards%2Froute.js&appDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-flashcards%2Froute&page=%2Fapi%2Fgenerate-flashcards%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-flashcards%2Froute.js&appDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_MAC_Downloads_Metaschool_FlashCard_app_api_generate_flashcards_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/generate-flashcards/route.js */ \"(rsc)/./app/api/generate-flashcards/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-flashcards/route\",\n        pathname: \"/api/generate-flashcards\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-flashcards/route\"\n    },\n    resolvedPagePath: \"/Users/MAC/Downloads/Metaschool/FlashCard/app/api/generate-flashcards/route.js\",\n    nextConfigOutput,\n    userland: _Users_MAC_Downloads_Metaschool_FlashCard_app_api_generate_flashcards_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/generate-flashcards/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1mbGFzaGNhcmRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZnZW5lcmF0ZS1mbGFzaGNhcmRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZ2VuZXJhdGUtZmxhc2hjYXJkcyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRk1BQyUyRkRvd25sb2FkcyUyRk1ldGFzY2hvb2wlMkZGbGFzaENhcmQlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGTUFDJTJGRG93bmxvYWRzJTJGTWV0YXNjaG9vbCUyRkZsYXNoQ2FyZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDOEI7QUFDM0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbGFzaGNhcmQvPzAzMWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL01BQy9Eb3dubG9hZHMvTWV0YXNjaG9vbC9GbGFzaENhcmQvYXBwL2FwaS9nZW5lcmF0ZS1mbGFzaGNhcmRzL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZS1mbGFzaGNhcmRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2VuZXJhdGUtZmxhc2hjYXJkc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuZXJhdGUtZmxhc2hjYXJkcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9NQUMvRG93bmxvYWRzL01ldGFzY2hvb2wvRmxhc2hDYXJkL2FwcC9hcGkvZ2VuZXJhdGUtZmxhc2hjYXJkcy9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZ2VuZXJhdGUtZmxhc2hjYXJkcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-flashcards%2Froute&page=%2Fapi%2Fgenerate-flashcards%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-flashcards%2Froute.js&appDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/generate-flashcards/route.js":
/*!**********************************************!*\
  !*** ./app/api/generate-flashcards/route.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n// Accesing API key from environment variables\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\n// Creating an OpenAI assistant\nasync function getOrCreateAssistant() {\n    try {\n        const assistants = await openai.beta.assistants.list({\n            limit: 1,\n            order: \"desc\"\n        });\n        const existingAssistant = assistants.data.find((assistant)=>assistant.name === \"Flashcard Generator\");\n        return await openai.beta.assistants.create({\n            name: \"Flashcard Generator\",\n            instructions: `You are a flashcard generation assistant. Your task is to analyze the provided content and generate flashcards.\n      IMPORTANT: You must respond ONLY with a JSON array of flashcard objects. Each object must have exactly two fields:\n      - \"question\": the flashcard question\n      - \"answer\": the corresponding answer\n      \n      Example format:\n      [\n        {\n          \"question\": \"What is example question 1?\",\n          \"answer\": \"This is example answer 1\"\n        },\n        {\n          \"question\": \"What is example question 2?\",\n          \"answer\": \"This is example answer 2\"\n        }\n      ]\n      \n      Do not include any introductory text, explanations, or other content. Only output valid JSON in the exact format shown above.`,\n            model: \"gpt-4o\",\n            tools: [\n                {\n                    type: \"file_search\"\n                }\n            ]\n        });\n    } catch (error) {\n        console.error(\"Error creating/getting assistant:\", error);\n        throw error;\n    }\n}\n// Function to generate Flashcards based on 'vectorStoreId' and 'assistant id'\nasync function generateFlashcardsWithAssistant(vectorStoreId) {\n    try {\n        const assistant = await getOrCreateAssistant();\n        // Update assistant with vector store\n        await openai.beta.assistants.update(assistant.id, {\n            tool_resources: {\n                file_search: {\n                    vector_store_ids: [\n                        vectorStoreId\n                    ]\n                }\n            }\n        });\n        // Creating threads\n        const thread = await openai.beta.threads.create();\n        await openai.beta.threads.messages.create(thread.id, {\n            role: \"user\",\n            content: `Generate flashcards from the uploaded content. IMPORTANT: Respond ONLY with a JSON array of flashcard objects. Each object must have \"question\" and \"answer\" fields. Do not include any other text or explanations.`\n        });\n        const run = await openai.beta.threads.runs.create(thread.id, {\n            assistant_id: assistant.id,\n            instructions: `Create flashcards from the content. REMEMBER: Your response must be ONLY a JSON array of objects with \"question\" and \"answer\" fields. No other text or content.`\n        });\n        // Poll for completion\n        let runStatus = await openai.beta.threads.runs.retrieve(thread.id, run.id);\n        const maxAttempts = 60;\n        let attempts = 0;\n        while(runStatus.status !== \"completed\" && attempts < maxAttempts){\n            if (runStatus.status === \"failed\") {\n                throw new Error(\"Assistant run failed: \" + runStatus.last_error);\n            }\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            runStatus = await openai.beta.threads.runs.retrieve(thread.id, run.id);\n            attempts++;\n        }\n        if (attempts >= maxAttempts) {\n            throw new Error(\"Assistant run timed out\");\n        }\n        const messages = await openai.beta.threads.messages.list(thread.id);\n        const assistantMessage = messages.data.find((msg)=>msg.role === \"assistant\");\n        if (!assistantMessage) {\n            throw new Error(\"No response from assistant\");\n        }\n        // Get the response content and clean it\n        let content = assistantMessage.content[0].text.value;\n        // Try to extract JSON if it's wrapped in code blocks\n        const jsonMatch = content.match(/```(?:json)?\\s*([\\s\\S]*?)\\s*```/);\n        if (jsonMatch) {\n            content = jsonMatch[1];\n        }\n        // Clean the content and try to parse\n        content = content.trim();\n        try {\n            const flashcards = JSON.parse(content);\n            // Validate flashcard format\n            if (!Array.isArray(flashcards)) {\n                throw new Error(\"Response is not an array\");\n            }\n            flashcards.forEach((card, index)=>{\n                if (!card.question || !card.answer) {\n                    throw new Error(`Flashcard at index ${index} is missing question or answer`);\n                }\n            });\n            return flashcards;\n        } catch (error) {\n            console.error(\"Error parsing assistant response. Response content:\", content);\n            throw new Error(`Failed to parse flashcards: ${error.message}`);\n        }\n    } catch (error) {\n        console.error(\"Error in generateFlashcardsWithAssistant:\", error);\n        throw error;\n    }\n}\n// Creating vector store and upload file to it\nasync function createVectorStoreAndUploadFile(file) {\n    try {\n        const vectorStore = await openai.beta.vectorStores.create({\n            name: \"Flashcard Content Vector Store\"\n        });\n        if (!vectorStore || !vectorStore.id) {\n            throw new Error(\"Failed to create a vector store.\");\n        }\n        // Creating a temporary path to store file\n        const tempDir = os__WEBPACK_IMPORTED_MODULE_3___default().tmpdir();\n        const tempFilePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(tempDir, file.name);\n        const fileContent = Buffer.from(await file.arrayBuffer());\n        await fs__WEBPACK_IMPORTED_MODULE_1___default().promises.writeFile(tempFilePath, fileContent);\n        const fileObject = await openai.files.create({\n            file: fs__WEBPACK_IMPORTED_MODULE_1___default().createReadStream(tempFilePath),\n            purpose: \"assistants\"\n        });\n        const fileBatch = await openai.beta.vectorStores.fileBatches.create(vectorStore.id, {\n            file_ids: [\n                fileObject.id\n            ]\n        });\n        let status = await openai.beta.vectorStores.fileBatches.retrieve(vectorStore.id, fileBatch.id);\n        const maxAttempts = 30;\n        let attempts = 0;\n        while(status.status === \"processing\" && attempts < maxAttempts){\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            status = await openai.beta.vectorStores.fileBatches.retrieve(vectorStore.id, fileBatch.id);\n            attempts++;\n        }\n        await fs__WEBPACK_IMPORTED_MODULE_1___default().promises.unlink(tempFilePath);\n        if (status.status === \"failed\" || attempts >= maxAttempts) {\n            throw new Error(\"File processing failed or timed out\");\n        }\n        return vectorStore.id;\n    } catch (error) {\n        console.error(\"Error creating vector store or uploading files:\", error);\n        throw error;\n    }\n}\nasync function POST(request) {\n    try {\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"No file provided\"\n            }, {\n                status: 400\n            });\n        }\n        // Creating vector store an uploading file\n        const vectorStoreId = await createVectorStoreAndUploadFile(file);\n        console.log(\"Vector store created successfully with ID:\", vectorStoreId);\n        // Generating flashcards\n        const flashcards = await generateFlashcardsWithAssistant(vectorStoreId);\n        console.log(\"Flashcards generated successfully:\", flashcards.length);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            flashcards,\n            totalChunks: 1,\n            processedChunks: 1\n        });\n    } catch (error) {\n        console.error(\"Full error details:\", error);\n        if (error.message.includes(\"rate_limit\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Rate limit exceeded. Please try again in a few minutes.\"\n            }, {\n                status: 429\n            });\n        }\n        if (error.message.includes(\"context_length_exceeded\") || error.message.includes(\"maximum context length\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Document is too large. Please try with a smaller document.\"\n            }, {\n                status: 413\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate flashcards. Please try again.\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate-flashcards/route.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/formdata-node","vendor-chunks/openai","vendor-chunks/form-data-encoder","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/ms","vendor-chunks/humanize-ms","vendor-chunks/event-target-shim","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-flashcards%2Froute&page=%2Fapi%2Fgenerate-flashcards%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-flashcards%2Froute.js&appDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FMAC%2FDownloads%2FMetaschool%2FFlashCard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();